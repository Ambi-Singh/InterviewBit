/*  Problem Description

Given a linked list A , reverse the order of all nodes at even positions.



Problem Constraints
1 <= Size of linked list <= 100000



Input Format
First and only argument is the head of the Linked-List A.



Output Format
Return the head of the new linked list.  */




ListNode* Solution::solve(ListNode* head) {
ListNode*odd=head;
if(odd==NULL || odd->next==NULL || odd->next->next==NULL)
return head;
ListNode*even=NULL;
while(odd && odd->next)
{
    ListNode *temp=odd->next;
    odd->next=temp->next;//linking odd nodes to each other
    temp->next=even;//creating a separate even nodes list in reverse order
    even=temp;
    odd=odd->next;
}
odd=head;
while(even)
{
    ListNode*temp=even->next;
    even->next=odd->next;
    odd->next=even;
    odd=odd->next->next;
    even=temp;
}
return head;
}

/* Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

For example,

Given 1->4->3->2->5->2 and x = 3,

return 1->2->2->4->3->5. */

ListNode* Solution::partition(ListNode* head, int x) {
    ListNode *small=new ListNode(0);//to maintain pointers to the beginning of our both LL
    ListNode *higher=new ListNode(0);//if we do not maintain these,beginning nodes will be lost
    ListNode *smallhead=small,*higherhead=higher;
while(head!=NULL)
{
    if(head->val<x)
    {//small list
smallhead->next=head;
smallhead=smallhead->next;    }
else{
    higherhead->next=head;
    higherhead=higherhead->next;
}
head=head->next;
}
higherhead->next=NULL;
smallhead->next=higher->next;
return small->next;

   }

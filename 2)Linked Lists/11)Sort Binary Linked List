/* Problem Description

Given a Linked List A consisting of N nodes.

The Linked List is binary i.e data values in the linked list nodes consist of only 0's and 1's.

You need to sort the linked list and return the new linked list.

NOTE:

Try to do it in constant space.


Problem Constraints
 1 <= N <= 105

 A.val = 0 or A.val = 1



Input Format
First and only argument is the head pointer of the linkedlist A.



Output Format
Return the head pointer of the new sorted linked list. */

ListNode* Solution::solve(ListNode* head) {
    ListNode* temp=head;
    int count1=0,count0=0;
    while(temp!=NULL)
    //traverse across the entire list and count no.of nodes with value 0 and those with 1
    {
        if(temp->val==0)
        count0++;
        else count1++;
        temp=temp->next;
    }
    ListNode* curr=head;
    //now again begin with the head node and make all nodes 0 from i=1 to count0
    for(int i=1;i<=count0;i++)
    {curr->val=0;
     curr=curr->next;
}
//we are now standing at the last node made 0,make remaining nodes 1 running loop till count1
for(int i=1;i<=count1;i++)
{
    curr->val=1;
    curr=curr->next;
}
return head;}

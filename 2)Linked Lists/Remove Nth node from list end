Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.

Note:

If n is greater than the size of the list, remove the first node of the list.
Try doing it using constant additional space.

ListNode* Solution::removeNthFromEnd(ListNode* head, int x) {
    int count=0;
    ListNode* temp=head;
    while(temp)
    {
        temp=temp->next;
        count++;
    }
    int y=count-x;// deletion happens from the end
    if(count==1)
    return NULL;
    if(x>=count)
return head->next;//if x is greater than size of list,we have to remove just the first node from the list
temp=head;
for(int i=1;i<y;i++)
temp=temp->next;
temp->next=temp->next->next;
return head;

}

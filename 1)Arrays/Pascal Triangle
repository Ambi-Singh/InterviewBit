/*Problem Description : Given numRows, generate the first numRows of Pascal's triangle.
Pascal's triangle : To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1.
Example:Given numRows = 5,
Return
[
     [1],
     [1,1],
     [1,2,1],
     [1,3,3,1],
     [1,4,6,4,1]
]

*/
vector<vector<int> > Solution::solve(int n) {
    
     vector<vector<int> >r(n);//create a 2D vector ,row and column size = n
     if(n==0)
    return r;//if no.of rows is 0,return the empty vector
     for(int i=0;i<n;i++)
     {
         r[i].resize(i+1);//ith row will have (i+1) elements.Eg: 3rd row has 4 elements
         //so we increase size of r[i]th row everytime by 1,before inserting values
         r[i][0]=r[i][i]=1;//First and last value in each row are 1
         for(int j=1;j<i;j++)
//for the remaining rows,every element is the sum of the previous two elements in i-1 row
         r[i][j]=r[i-1][j-1]+r[i-1][j];
     }
     return r;
   
}

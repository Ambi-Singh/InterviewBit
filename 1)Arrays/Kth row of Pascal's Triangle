Problem Description

Given an index k, return the kth row of the Pascal's triangle.
Pascal's triangle: To generate A[C] in row R, sum up A'[C] and A'[C-1] from previous row R - 1.

Example:

Input : k = 3


Return : [1,3,3,1]

Note: k is 0 based. k = 0, corresponds to the row [1]. 

Note: Could you optimize your algorithm to use only O(k) extra space?



vector<int> Solution::getRow(int rowIndex) {
    vector<int> result (rowIndex+1,1); //create a vector of size rowIndex+1,having all values 1 in the beginning
    for(int i=1;i<rowIndex;++i)
    //run a loop from the ith position till 0,short cut method to calculate values by using only k extra space
    {for(int j=i;j>0;j--)
    result[j]+=result[j-1];}
    return result;

    }
